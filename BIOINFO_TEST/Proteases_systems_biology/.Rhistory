library(dplyr)
DNA_motifs <- read.csv("~/Documentos/GitHub/Doctoral_project/Proteases_systems_biology/DNA_motifs.csv")
View(DNA_motifs)
plot(DNA_motifs)
treeemap(DNA_motifs)
heatmap(DNA_motifs)
library(tidyverse)
set.seed(1990)
ID <- rep(c('A','B','C'),each = 1)
n <- sample(c(0,1), replace=TRUE, size=45)
df <- tibble(ID)
df <- cbind(df, as.data.frame(matrix(n, nrow = 3)))
plot(df)
heatmap(df)
install.packages("tidyverse")
library(tidyverse)
##### Example data
set.seed(123) # Set seed for reproducibility
data <- matrix(rnorm(100, 0, 10), nrow = 10, ncol = 10) # Create example data
colnames(data) <- paste0("col", 1:10) # Column names
rownames(data) <- paste0("row", 1:10) # Row names
heatmap(data)
rownames(data) <- paste0("row", 1:10) # Row names
a <- matrix(5,5)
a
a <- matrix(5)(5)
a <- matrix(5:5)
a
matrix(, nrow = 5, ncol = 7)
matrix(c(1,2,3,4,5,6,7), nrow = 5, ncol = 7)
matrix(c(1,2,3,4,5,6,7), nrow = 7, ncol = 6)
matrix(c(c(1,2,3,4,5,6,7),c(0,2,3,4,5,6,0),c(1,2,3,4,5,6,7),c(5,5,5,5,5,5,5),c(1,2,3,4,5,6,0)), nrow = 7, ncol = 6)
matrix(c(c(1,2,3,4,5,6,0)), nrow = 7, ncol = 6)
matrix(c(1,2,3,4,5,6), nrow = 7, ncol = 6)
matrix(c(1 2 35 6), nrow = 7, ncol = 6)
matrix(c(1, 2, 3, 5, 6), nrow = 7 , ncol = 6,)
matrix(c(1, 2, 3, 5, 6), nrow = 7 , ncol = 6,)
matrix(c(1, 2, 3, 4, 5, 6, 7), nrow = 7 , ncol = 6,)
matrix(c(1, 2, 3, 4, 5, 6, 7, 8), nrow = 7 , ncol = 6,)
matrix(c(c(1, 2, 3, 4, 5, 6, 7), c(0, 2, 3, 4, 5, 6, 7)), nrow = 7 , ncol = 6,)
matrix(c(c(1, 2, 3, 4, 5, 6, 7), c(0, 2, 3, 4, 5, 6, 7), c(1, 2, 3, 4, 5, 6, 7), c(1, 2, 3, 4, 5, 6, 7), c(1, 1, 1, 1, 1, 1, 1)), nrow = 7 , ncol = 6,)
matrix(c(c(1, 2, 3, 4, 5, 6, 7), c(0, 2, 3, 4, 5, 6, 7), c(1, 2, 3, 4, 5, 6, 7), c(1, 2, 3, 4, 5, 6, 7), c(1, 1, 1, 1, 1, 1, 1), c(1, 1, 1, 1, 1, 1, 1)), nrow = 7 , ncol = 6,)
test <- matrix(c(c(1, 2, 3, 4, 5, 6, 7), c(0, 2, 3, 4, 5, 6, 7), c(1, 2, 3, 4, 5, 6, 7), c(1, 2, 3, 4, 5, 6, 7), c(1, 1, 1, 1, 1, 1, 1), c(1, 1, 1, 1, 1, 1, 1)), nrow = 7 , ncol = 6,)
heatmap(test)
test <- matrix(c(c(1, 0, 1, 0, 1, 0, 1), c(0, 1, 1, 0, 0, 0, 0), c(1, 0, 0, 0, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(1, 1, 1, 1, 1, 1, 1), c(1, 1, 1, 1, 1, 1, 1)), nrow = 7 , ncol = 6,)
heatmap(test)
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6,)
heatmap(test)
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, row.names(c('A', 'B', 'C', 'D', 'E', 'F', 'G'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, row.names(c('A', 'B', 'C', 'D', 'E', 'F', 'G'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, row.names(c('A', 'B', 'C', 'D', 'E', 'F', 'G')))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, row.names('A', 'B', 'C', 'D', 'E', 'F', 'G'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, row.names('A', 'B', 'C', 'D', 'E', 'F'))
?matrix
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, dimnames = c('A', 'A', 'A', ,'A', 'A', 'A', 'A'), c('A', 'A', 'A', ,'A', 'A', 'A', 'A'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, dimnames = c('A', 'A', 'A', ,'A', 'A', 'A', 'A'), c('A', 'A', 'A','A','A', 'A', 'A', 'A'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, dimnames = c('A', 'A', 'A','A','A', 'A', 'A', 'A'), c('A', 'A', 'A', 'A', 'A', 'A', 'A'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, dimnames = c('A', 'A', 'A','A','A', 'A', 'A', 'A'), c('A', 'A', 'A','A', 'A', 'A', 'A', 'A'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 6 , ncol = 6, dimnames = c('A', 'A', 'A','A','A', 'A'), c('A', 'A', 'A', 'A', 'A', 'A'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 6 , ncol = 6, dimnames = list('A', 'B'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6, dimnames = list('A', 'B'))
test <- matrix(c(c(1, 1, 1, 1, 1, 1, 1), c(0, 1, 1, 0, 0, 0, 0), c(0, 1, 1, 1, 0, 0, 0), c(0, 0, 0, 1, 1, 1, 1), c(0, 0, 0, 0, 1, 1, 1), c(1, 1, 1, 0, 0, 0, 0)), nrow = 7 , ncol = 6)
heatmap(test)
test
heatmap(test, col = 'green')
heatmap(test, colorRampPalette('cyan', 'deeppink3'))
mycolor <- colorRampPalette('cyan', 'deeppink3')
mycolor <- colorRampPalette('cyan', 'deeppink3')
mycolor <- colorRampPalette(c('cyan', 'deeppink3'))
heatmap(test, col = mycolor(100))
mycolor <- colorRampPalette(c('green', 'darkgreen'))
heatmap(test, col = mycolor(100))
name_col <-
name_row <-
test <- matrix(c(c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0)), nrow = 12 , ncol = 6)
mycolor <- colorRampPalette(c('green', 'darkgreen'))
mycolor <- colorRampPalette(c('green', 'darkgreen'))
heatmap(test, col = mycolor(100))
name_col <-
name_row <-
test <- matrix(c(c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,1,1,1,0,1,0,0), c(0,0,0,1,1,0,0,1,1,1,1,1)), nrow = 12 , ncol = 6)
mycolor <- colorRampPalette(c('green', 'darkgreen'))
heatmap(test, col = mycolor(100))
heatmap(test, col = mycolor(1000))
heatmap(test, col = mycolor(1000))
heatmap(test, col = mycolor(10))
name_col <-
name_row <-
test <- matrix(c(c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,0,0,1,0,1,0,0), c(0,0,0,1,1,1,1,1,0,1,0,0), c(0,0,0,1,1,0,0,1,1,1,1,1)), nrow = 12 , ncol = 6)
mycolor <- colorRampPalette(c('green', 'darkgreen'))
heatmap(test, col = mycolor(10))
heatmap(test, col = mycolor(1))
heatmap(test, col = mycolor(2))
heatmap(test, col = mycolor(3))
heatmap(test, col = mycolor(100))
test
mycolor <- colorRampPalette(c('green', 'darkblue'))
heatmap(test, col = mycolor(100))
mycolor <- colorRampPalette(c('green', 'darkgreen'))
heatmap(test, col = mycolor(100))
presence.absence.hist(DATA, which.model = 1, na.rm = FALSE,
xlab = "predicted probability", ylab = "number of plots",
main = NULL, model.names = NULL, color = NULL, N.bars = 20,
truncate.tallest = FALSE, ylim = 1.25 * range(0, apply(counts, 2, sum)),
opt.thresholds = NULL, threshold = 101, opt.methods = NULL,
req.sens, req.spec, obs.prev = NULL, smoothing = 1, add.legend = TRUE,
legend.text=c("present","absent"), legend.cex = 0.8, add.opt.legend = TRUE,
opt.legend.text = NULL, opt.legend.cex = 0.7, pch = NULL, FPC, FNC)
install.packages("PresenceAbsence")
presence.absence.hist(DATA, which.model = 1, na.rm = FALSE,
xlab = "predicted probability", ylab = "number of plots",
main = NULL, model.names = NULL, color = NULL, N.bars = 20,
truncate.tallest = FALSE, ylim = 1.25 * range(0, apply(counts, 2, sum)),
opt.thresholds = NULL, threshold = 101, opt.methods = NULL,
req.sens, req.spec, obs.prev = NULL, smoothing = 1, add.legend = TRUE,
legend.text=c("present","absent"), legend.cex = 0.8, add.opt.legend = TRUE,
opt.legend.text = NULL, opt.legend.cex = 0.7, pch = NULL, FPC, FNC)
library(PresenceAbsence)
presence.absence.hist(DATA, which.model = 1, na.rm = FALSE,
xlab = "predicted probability", ylab = "number of plots",
main = NULL, model.names = NULL, color = NULL, N.bars = 20,
truncate.tallest = FALSE, ylim = 1.25 * range(0, apply(counts, 2, sum)),
opt.thresholds = NULL, threshold = 101, opt.methods = NULL,
req.sens, req.spec, obs.prev = NULL, smoothing = 1, add.legend = TRUE,
legend.text=c("present","absent"), legend.cex = 0.8, add.opt.legend = TRUE,
opt.legend.text = NULL, opt.legend.cex = 0.7, pch = NULL, FPC, FNC)
data(SIM3DATA)
### EXAMPLE 1 - Comparing three models ###
par(mfrow=c(1,3))
for(i in 1:3){
presence.absence.hist(	SIM3DATA,
which.model=i,
na.rm=TRUE,
model.names=c("Model 1","Model 2","Model 3"),
N.bars=10,
truncate.tallest=FALSE,
opt.thresholds=TRUE,
opt.methods=c("Default","Sens=Spec","MaxKappa"))}
### EXAMPLE 2 - Effect of 'truncate.tallest' argument ###
par(mfrow=c(1,2))
presence.absence.hist(SIM3DATA,
which.model=1,
model.names=c("Model 1","Model 2","Model 3"),
N.bars=10,
truncate.tallest=FALSE,
main="truncate.tallest=FALSE")
presence.absence.hist(SIM3DATA,
which.model=1,
model.names=c("Model 1","Model 2","Model 3"),
N.bars=10,
truncate.tallest=TRUE,
main="truncate.tallest=TRUE")
